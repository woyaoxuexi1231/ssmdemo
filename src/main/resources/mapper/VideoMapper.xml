<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.xyh.video.dao.VideoMapper" >
  <resultMap id="BaseResultMap" type="team.xyh.video.pojo.Video" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="audio_id" property="audioId" jdbcType="VARCHAR" />
    <result column="video_desc" property="videoDesc" jdbcType="VARCHAR" />
    <result column="video_path" property="videoPath" jdbcType="VARCHAR" />
    <result column="video_seconds" property="videoSeconds" jdbcType="REAL" />
    <result column="video_width" property="videoWidth" jdbcType="INTEGER" />
    <result column="video_height" property="videoHeight" jdbcType="INTEGER" />
    <result column="cover_path" property="coverPath" jdbcType="VARCHAR" />
    <result column="like_counts" property="likeCounts" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from videos
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="team.xyh.video.pojo.Video" >
    insert into videos (id, user_id, audio_id, 
      video_desc, video_path, video_seconds, 
      video_width, video_height, cover_path, 
      like_counts, status, create_time
      )
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{audioId,jdbcType=VARCHAR}, 
      #{videoDesc,jdbcType=VARCHAR}, #{videoPath,jdbcType=VARCHAR}, #{videoSeconds,jdbcType=REAL}, 
      #{videoWidth,jdbcType=INTEGER}, #{videoHeight,jdbcType=INTEGER}, #{coverPath,jdbcType=VARCHAR}, 
      #{likeCounts,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="team.xyh.video.pojo.Video" >
    update videos
    set user_id = #{userId,jdbcType=VARCHAR},
      audio_id = #{audioId,jdbcType=VARCHAR},
      video_desc = #{videoDesc,jdbcType=VARCHAR},
      video_path = #{videoPath,jdbcType=VARCHAR},
      video_seconds = #{videoSeconds,jdbcType=REAL},
      video_width = #{videoWidth,jdbcType=INTEGER},
      video_height = #{videoHeight,jdbcType=INTEGER},
      cover_path = #{coverPath,jdbcType=VARCHAR},
      like_counts = #{likeCounts,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select id, user_id, audio_id, video_desc, video_path, video_seconds, video_width, 
    video_height, cover_path, like_counts, status, create_time
    from videos
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, user_id, audio_id, video_desc, video_path, video_seconds, video_width,
    video_height, cover_path, like_counts, status, create_time
    from videos
  </select>
  <select id="getAll" resultType="team.xyh.video.dto.VideoDto" >
    select videos.id,users.id,video_desc, video_path,  like_counts, status, create_time
    from videos,users where videos.user_id = users.id limit #{page},#{limit}
  </select>
  <select id="videoCount" resultType="java.lang.Long">
    select COUNT(*) FROM videos,users where videos.user_id = users.id
  </select>
  <select id="getVideoById" resultType="team.xyh.video.dto.VideoDto">
    select videos.id,users.id,video_desc, video_path,  like_counts, status, create_time
    from videos,users
    <where>
        <if test="id != null and id !=''">
          videos.id like concat("%",#{id},"%")
        </if>
        <if test="videoDesc != null and videoDesc !=''">
          and video_desc like concat("%",#{videoDesc},"%")
        </if>
        <if test="createTimeRange !=null and createTimeRange != ''">
          and DATE_FORMAT(create_time,"%Y-%m-%d %H:%i:%s") BETWEEN DATE_FORMAT(#{startTime},"%Y-%m-%d %H:%i:%s") AND DATE_FORMAT(#{endTime},"%Y-%m-%d %H:%i:%s")
        </if>
         and videos.user_id = users.id limit #{page},#{limit}
    </where>
  </select>
  <update id="update" parameterType="java.lang.String">
    update videos set
    <if test="field == 'status'">
      status = #{value}
    </if>
    <if test="field == 'like_counts'">
      like_counts = #{value}
    </if>
    <if test="field == 'video_desc'">
      video_desc = #{value}
    </if>

    where id = #{id}
  </update>
  <insert id="addVideo" parameterType="team.xyh.video.pojo.Video">
    insert into videos (id, user_id,
      video_desc, video_path,
      like_counts, status, create_time
      )
    values (#{id}, #{userId},
      #{videoDesc}, #{videoPath},
      #{likeCounts}, #{status}, #{createTime}
      )
  </insert>
  <select id="findVideoUserId" resultType="java.lang.String">
    SELECT DISTINCT user_id FROM videos
  </select>
  <select id="findVideoIdByUserId" resultType="java.lang.String">
    SELECT id FROM videos where user_id = #{userId}
  </select>
  <select id="findVideoByUserIdAndId" resultType="team.xyh.video.dto.VideoDto">
    SELECT videos.id,user_id,video_desc, video_path,  like_counts, status, create_time FROM videos
    where id= #{id}
  </select>
  <select id="findVideoByUserId" resultType="team.xyh.video.dto.VideoDto">
    SELECT videos.id,user_id,video_desc, video_path,  like_counts, status, create_time FROM videos
    where user_id = #{userId}
  </select>
  <select id="getVideoLike" resultType="team.xyh.video.dto.VideoLikeDto">
    SELECT video_path as "videoName",SUM(like_counts) as "videoLike" FROM videos,users WHERE users.id=videos.user_id GROUP BY video_path
  </select>
</mapper>